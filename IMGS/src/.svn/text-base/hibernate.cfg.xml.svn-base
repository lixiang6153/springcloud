<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
          "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
          "hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>

		<!-- 数据库连接配置 : 放置到IOC容器中配置 <property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property> 
			<property name="hibernate.connection.url">jdbc:mysql://localhost:3306/imps?useSSL=false</property> 
			<property name="hibernate.connection.username">root</property> <property 
			name="hibernate.connection.password">123456</property> -->

		<!-- 本地语言及sql显示 -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
		<property name="hibernate.show_sql">false</property>
		<!-- <property name="hibernate.format_sql">true</property>-->
		
		<!-- create创建表 validate验证表 update在原来的表上增加字段 -->
		<!-- <property name="hibernate.hbm2ddl.auto">update</property> -->
		
		<!-- hibernate检测到mysql-connector-java(5.1.31)没有实现 createClob()接口 -->
		<property name="hibernate.temp.use_jdbc_metadata_defaults">false</property>
		
		<!-- 开启二级缓存 -->
		<property name="hibernate.cache.use_second_level_cache">true</property>
		<!-- 启动"查询缓存"如果想缓存使用findall()、list()、Iterator()、createCriteria()、createQuery()等方法获得的数据结果集,必须配置此项 -->
		<!-- 	<property name="hibernate.cache.use_query_cache">true</property> -->
		<!-- 设置二级缓存插件EHCache的Provider类 -->
		<!-- Hibernate4以后都封装到org.hibernate.cache.ehcache.EhCacheRegionFactory，将二级缓存配置为redis才比较适合大型的分布式系统,还没配置 -->
		<!-- <property name="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</property>	 -->
		<!-- <property name="hibernate.javax.cache.provider">org.ehcache.jsr107.EhcacheCachingProvider</property> -->
		<!-- 指定缓存配置文件位置 -->
		<!-- <property name="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml </property> -->
		
		<!-- session上下文交给Spring来管理 -->
		<property name="current_session_context_class">org.springframework.orm.hibernate5.SpringSessionContext</property>
		<!--<property name="current_session_context_class">thread</property> -->

	</session-factory>
</hibernate-configuration>