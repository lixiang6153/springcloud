<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.3.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.3.xsd
	http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd">

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="100" />
		<property name="minIdle" value="30"></property>
		<property name="maxTotal" value="10000" />
		<property name="minEvictableIdleTimeMillis" value="600000"></property>
		<property name="timeBetweenEvictionRunsMillis" value="600000"></property>
		<property name="blockWhenExhausted" value="true" />
		<property name="maxWaitMillis" value="30000" />
		<property name="testOnBorrow" value="false" />
	</bean>
	<!-- 非集群配置 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.ip}" />
		<property name="port" value="6379" />
		<property name="poolConfig" ref="jedisPoolConfig" />
		<property name="usePool" value="true" />
		<property name="timeout" value="180000" />
	</bean>

	<!--集群环境配置 -->
	<!-- 进行所有的哨兵地址的配置项 -->
	<!-- <bean id="sentinelsConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration"> 
		<property name="master"> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<property name="name" value="mymaster"/> </bean> </property> <property name="sentinels"> 
		<set> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="192.168.244.149"/> <constructor-arg name="port" 
		value="26379"/> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="192.168.244.150"/> <constructor-arg name="port" 
		value="26379"/> </bean> <bean class="org.springframework.data.redis.connection.RedisNode"> 
		<constructor-arg name="host" value="192.168.244.151"/> <constructor-arg name="port" 
		value="26379"/> </bean> </set> </property> </bean> <bean id="jedisConnectionFactory" 
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
		<constructor-arg name="sentinelConfig" ref="sentinelsConfiguration"/> <property 
		name="poolConfig" ref="jedisPoolConfig"/> <property name="password" value="dw123456"/> 
		<property name="usePool" value="true" /> </bean> -->
	<!--集群环境配置结束 -->




	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>

	<!-- redis缓存管理器 -->
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg ref="redisTemplate"></constructor-arg>
		<property name="cacheNames">
			<set>
				<value>PersonsCache</value>
				<value>CardsCache</value>
				<value>UsersCache</value>
				<value>CardRightsCache</value>
				<value>CardsCache</value>
				<value>GestationinfosCache</value>
				<value>OrganizationsCache</value>
				<value>RegionsCache</value>
				<value>PersonFlowAlarmsCache</value>
			</set>

		</property>
		<property name="defaultExpiration" value="3600" /><!-- 缓存3600秒 -->
	</bean>
	<bean id="compositeCacheManager" class="org.springframework.cache.support.CompositeCacheManager">
		<property name="cacheManagers">
			<list>
				<ref bean="cacheManager" />
			</list>
		</property>
		<property name="fallbackToNoOpCache" value="true" /> <!-- 如果找不到缓存，不进行任何缓存操作 -->
	</bean>
	<!-- 开启缓存注解 -->
	<cache:annotation-driven cache-manager="cacheManager"></cache:annotation-driven>
	
	<!-- 分布式session -->
	<!-- <bean id="redisHttpSessionConfiguration"
		class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
		有效时间
		<property name="maxInactiveIntervalInSeconds" value="1800" />
	</bean> -->
	


</beans>